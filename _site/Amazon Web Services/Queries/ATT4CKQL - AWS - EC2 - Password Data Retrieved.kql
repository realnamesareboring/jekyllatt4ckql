//===================================================================
// Define base variables and functions
// Initialize core data sources for password extraction monitoring
//===================================================================
let summaries = AWS_generateSummary();               // Get event context 
let ExtendedUserIdentity = AWS_extendUserIdentity(); // Get extended identity info
//===================================================================
// Get GetPasswordData events
// Track all instances where passwords were retrieved
//===================================================================
let passwordEvents = ExtendedUserIdentity
    | where TimeGenerated >= ago(1h)                     // Look back (x) days
    | where EventName == 'GetPasswordData'               // Focus on password retrieval
    | where UserIdentityArn !endswith "@privusr.vuln.org"    // Filter and only search for non-privileged accounts
    | extend InstanceId = tostring(parse_json(RequestParameters).instanceId)
    | summarize 
        AllIPs = make_set(SourceIpAddress)           // Collect all IPs making requests
        by 
        EventName, 
        UserIdentityArn, 
        AccountName, 
        AWSRegion, 
        RecipientAccountId, 
        InstanceId, 
        UserAgent;
//===================================================================
// Get instance metadata
// Collect OS and hostname details from instance metadata updates
//===================================================================
let instanceMetadata = ExtendedUserIdentity
    | where EventName == 'UpdateInstanceInformation'
    | extend 
        InstanceId = tostring(parse_json(RequestParameters).instanceId),     // InstanceId of host  
        OSVersion = tostring(parse_json(RequestParameters).platformName),    // Windows version
        ComputerName = tostring(parse_json(RequestParameters).computerName)  // Instance hostname
    | distinct 
        InstanceId, 
        OSVersion, 
        ComputerName;                                // One record per instance
//===================================================================
// Combine and enrich event data
// Join password events with instance details and create timeline
//===================================================================
passwordEvents
    | join 
        kind=leftouter (instanceMetadata) on InstanceId      // Add instance metadata
    | join 
        kind=inner (ExtendedUserIdentity
    | where TimeGenerated >= ago(1h)
    | where EventName == 'GetPasswordData'
    | extend 
        InstanceId = tostring(parse_json(RequestParameters).instanceId)
    | summarize 
        ConsolidatedTime = make_list(TimeGenerated)  // Create event timeline
        by 
        EventName, 
        UserIdentityArn, 
        AccountName, 
        AWSRegion, 
        RecipientAccountId, 
        UserAgent, 
        InstanceId
) 
        on 
        EventName, 
        UserIdentityArn, 
        AccountName, 
        AWSRegion, 
        RecipientAccountId, 
        UserAgent, 
        InstanceId
    | join 
        kind=leftouter (summaries                    // Add event summaries
    | where TimeGenerated >= ago(1h)
    | distinct 
        TimeGenerated, 
        EventName, 
        UserIdentityArn, 
        Summary
) 
        on 
        EventName, 
        UserIdentityArn
//===================================================================
// Format final output
// Ensure one record per instance with complete context
//===================================================================
    | summarize                                      // Group by instance
        TimesOccurred = make_set(ConsolidatedTime),  // When passwords were retrieved
        Summary = make_set(Summary),                 // Event descriptions
        AllSourceIPs = make_set(AllIPs),             // IPs making requests
        any(AccountName),                            // Associated account
        any(EventName),                              // Event type
        any(UserIdentityArn),                        // User identity
        any(RecipientAccountId),                     // Target account
        any(UserAgent),                              // Tool used
        any(AWSRegion),                              // AWS region
        any(OSVersion),                              // Windows version
        any(ComputerName)                            // Instance hostname
        by 
        InstanceId                                   // One record per instance
    | extend                                         // Format array outputs
        TimesOccurred = array_strcat(TimesOccurred, "\n"),
        Summary = array_strcat(Summary, "\n"),
        AllSourceIPs = array_strcat(AllSourceIPs, "\n"),
        ComputerName = iff(isempty(any_ComputerName), "Results not found. Please check AWS Console", any_ComputerName),
        OSVersion = iff(isempty(any_OSVersion), "Results not found. Please check AWS Console", any_OSVersion)
    | project                                        // Select final fields
        TimesOccurred,                               // When activity occurred
        Summary,                                     // What happened
        EventName = any_EventName,                   // Action type
        InstanceId,                                  // Target instance
        ComputerName,                                // Instance name  
        OSVersion,                                   // Windows version
        AccountName = any_AccountName,               // Account context
        RecipientAccountId = any_RecipientAccountId, // Target account
        UserIdentityArn = any_UserIdentityArn,       // Who performed action
        UserAgent = any_UserAgent,                   // How it was done
        AllSourceIPs                                 // From where
    | order by TimesOccurred desc                    // Most recent first